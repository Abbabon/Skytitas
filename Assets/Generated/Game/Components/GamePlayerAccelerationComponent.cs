//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity playerAccelerationEntity { get { return GetGroup(GameMatcher.PlayerAcceleration).GetSingleEntity(); } }
    public Components.GameComponents.PlayerAccelerationComponent playerAcceleration { get { return playerAccelerationEntity.playerAcceleration; } }
    public bool hasPlayerAcceleration { get { return playerAccelerationEntity != null; } }

    public GameEntity SetPlayerAcceleration(bool newTurnedOn) {
        if (hasPlayerAcceleration) {
            throw new Entitas.EntitasException("Could not set PlayerAcceleration!\n" + this + " already has an entity with Components.GameComponents.PlayerAccelerationComponent!",
                "You should check if the context already has a playerAccelerationEntity before setting it or use context.ReplacePlayerAcceleration().");
        }
        var entity = CreateEntity();
        entity.AddPlayerAcceleration(newTurnedOn);
        return entity;
    }

    public void ReplacePlayerAcceleration(bool newTurnedOn) {
        var entity = playerAccelerationEntity;
        if (entity == null) {
            entity = SetPlayerAcceleration(newTurnedOn);
        } else {
            entity.ReplacePlayerAcceleration(newTurnedOn);
        }
    }

    public void RemovePlayerAcceleration() {
        playerAccelerationEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Components.GameComponents.PlayerAccelerationComponent playerAcceleration { get { return (Components.GameComponents.PlayerAccelerationComponent)GetComponent(GameComponentsLookup.PlayerAcceleration); } }
    public bool hasPlayerAcceleration { get { return HasComponent(GameComponentsLookup.PlayerAcceleration); } }

    public void AddPlayerAcceleration(bool newTurnedOn) {
        var index = GameComponentsLookup.PlayerAcceleration;
        var component = (Components.GameComponents.PlayerAccelerationComponent)CreateComponent(index, typeof(Components.GameComponents.PlayerAccelerationComponent));
        component.TurnedOn = newTurnedOn;
        AddComponent(index, component);
    }

    public void ReplacePlayerAcceleration(bool newTurnedOn) {
        var index = GameComponentsLookup.PlayerAcceleration;
        var component = (Components.GameComponents.PlayerAccelerationComponent)CreateComponent(index, typeof(Components.GameComponents.PlayerAccelerationComponent));
        component.TurnedOn = newTurnedOn;
        ReplaceComponent(index, component);
    }

    public void RemovePlayerAcceleration() {
        RemoveComponent(GameComponentsLookup.PlayerAcceleration);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherPlayerAcceleration;

    public static Entitas.IMatcher<GameEntity> PlayerAcceleration {
        get {
            if (_matcherPlayerAcceleration == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.PlayerAcceleration);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherPlayerAcceleration = matcher;
            }

            return _matcherPlayerAcceleration;
        }
    }
}
